<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8">
  <title>Filmes em Cartaz</title>
  <style>
    body {
      background-color: #168f20;
      color: #fff;
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      flex-wrap: wrap;
    }
    #filters {
      margin-bottom: 20px;
    }
    select, #searchInput {
      padding: 10px;
      margin: 5px;
      border-radius: 5px;
      border: none;
    }
    #moviesContainer {
      text-align: center;
    }
    .movie-card {
      background-color: #333;
      border-radius: 10px;
      padding: 10px;
      margin: 10px;
      display: inline-block;
      width: 200px;
      vertical-align: top;
    }
    .movie-card img {
      width: 100%;
      border-radius: 10px;
    }
    .movie-card button {
      background-color: #0af;
      color: white;
      border: none;
      padding: 10px;
      border-radius: 5px;
      cursor: pointer;
      margin-top: 10px;
    }
    .detalhes-filme {
      text-align: left;
      font-size: 14px;
      margin-top: 10px;
      background-color: #444;
      padding: 10px;
      border-radius: 5px;
    }
    iframe {
      border-radius: 10px;
      margin-top: 10px;
    }
  </style>
</head>
<body>
  <header>
    <h1>üçø Filmes em Cartaz</h1>
    <div id="filters" style="display: flex; flex-wrap: wrap; gap: 10px; align-items: center;">
  <input type="text" id="searchInput" placeholder="üîç Buscar filme..." style="flex: 1; min-width: 200px;">
  
  <select id="genreFilter">
    <option value="">üé≠ Filtrar por g√™nero</option>
    <option value="28">A√ß√£o</option>
    <option value="35">Com√©dia</option>
    <option value="18">Drama</option>
    <option value="27">Terror</option>
    <option value="10749">Romance</option>
    <option value="16">Anima√ß√£o</option>
  </select>

  <select id="ratingFilter">
    <option value="">‚≠ê Avalia√ß√£o</option>
    <option value="high">Mais avaliados</option>
    <option value="medium">M√©dia</option>
    <option value="low">Menos avaliados</option>
  </select>

  <select id="yearFilter">
    <option value="">üìÖ Ano</option>
    <option value="2025">2025</option>
    <option value="2024">2024</option>
    <option value="2023">2023</option>
    <option value="2022">2022</option>
  </select>

  <select id="popularityFilter">
    <option value="">üî• Popularidade</option>
    <option value="high">Mais populares</option>
    <option value="low">Menos populares</option>
  </select>
</div>

  </header>

  <div id="moviesContainer"></div>

  <script>
    const API_KEY = 'bac370b35694ac13c8682b30d206c902';
    const BASE_URL = `https://movieappAPI.com.br`;
    const moviesContainer = document.getElementById('moviesContainer');
    const searchInput = document.getElementById('searchInput');
    const ratingFilter = document.getElementById('ratingFilter');
    const yearFilter = document.getElementById('yearFilter');
    const popularityFilter = document.getElementById('popularityFilter');

    async function fetchMovies(url) {
      const response = await fetch(url);
      const data = await response.json();
      displayMovies(data.results);
    }

    function displayMovies(movies) {
      moviesContainer.innerHTML = '';
      movies.forEach(movie => {
        const movieEl = document.createElement('div');
        movieEl.classList.add('movie-card');
        movieEl.innerHTML = `
          <img src="https://image.tmdb.org/t/p/w500${movie.poster_path}" alt="${movie.title}" />
          <h3>${movie.title}</h3>
          <p>Nota: ${movie.vote_average}</p>
          <button onclick="toggleDetalhes(${movie.id}, this)">Ver detalhes</button>
          <div id="detalhes-${movie.id}" class="detalhes-filme" style="display: none;"></div>
        `;
        moviesContainer.appendChild(movieEl);
      });
    }

    async function toggleDetalhes(id, btn) {
      const detalheDiv = document.getElementById(`detalhes-${id}`);

      if (detalheDiv.style.display === 'none') {
        const [detalhes, creditos, videos] = await Promise.all([
          fetch(`${BASE_URL}/movie/${id}?api_key=${API_KEY}&language=pt-BR`).then(res => res.json()),
          fetch(`${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}&language=pt-BR`).then(res => res.json()),
          fetch(`${BASE_URL}/movie/${id}/videos?api_key=${API_KEY}&language=pt-BR`).then(res => res.json())
        ]);

        const elenco = creditos.cast.slice(0, 5).map(ator => ator.name).join(', ');
        const trailer = videos.results.find(v => v.type === "Trailer" && v.site === "YouTube");const embedTrailer = trailer ? `<iframe width="100%" height="300" " frameborder="0" allowfullscreen></iframe>` : 'Trailer n√£o dispon√≠vel.';

        detalheDiv.innerHTML = `
          <p><strong>Sinopse:</strong> ${detalhes.overview}</p>
          <p><strong>Elenco:</strong> ${elenco}</p>
          <p><strong>Trailer:</strong><br>${embedTrailer}</p>
        `;
        detalheDiv.style.display = 'block';
        btn.innerText = 'Ocultar detalhes';
      } else {
        detalheDiv.style.display = 'none';
        btn.innerText = 'Ver detalhes';
      }
    }

    function applyFilters() {
      let url = `${BASE_URL}/discover/movie?api_key=${API_KEY}&language=pt-BR&sort_by=popularity.desc`;

      if (ratingFilter.value === 'high') url += '&vote_average.gte=7.5';
      if (ratingFilter.value === 'medium') url += '&vote_average.gte=5&vote_average.lte=7.4';
      if (ratingFilter.value === 'low') url += '&vote_average.lte=5';

      if (yearFilter.value) url += `&primary_release_year=${yearFilter.value}`;

      if (popularityFilter.value === 'high') url += '&sort_by=popularity.desc';
      if (popularityFilter.value === 'low') url += '&sort_by=popularity.asc';

      fetchMovies(url);
    }

    searchInput.addEventListener('input', () => {
      const query = searchInput.value.toLowerCase();
      fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=pt-BR`)
        .then(res => res.json())
        .then(data => displayMovies(data.results));
    });

    ratingFilter.addEventListener('change', applyFilters);
    yearFilter.addEventListener('change', applyFilters);
    popularityFilter.addEventListener('change', applyFilters);

    fetchMovies(`${BASE_URL}/movie/now_playing?api_key=${API_KEY}&language=pt-BR&page=1`);
  </script>
</body>
</html>
